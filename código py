from flask import Flask, request, jsonify
from borb.pdf.pdf import PDF 
from borb.toolkit.text.simple_text_extraction import SimpleTextExtraction
import io
import requests

app = Flask(__name__)

# Função para extrair texto do PDF com Borb
def extract_text_from_pdf(pdf_path):
    try:
        response = requests.get(pdf_path)
        pdf_as_bytes = io.BytesIO(response.content)
        
        # Carrega o PDF
        pdf_document = PDF.loads(pdf_as_bytes)
        
        # Extrai texto
        text_extractor = SimpleTextExtraction()
        pdf_document.get_page(0).accept(text_extractor)
        extracted_text = text_extractor.get_text_for_page(0)
        
        return extracted_text if extracted_text else "Nenhum texto encontrado no PDF."
    
    except Exception as e:
        return f"Erro ao extrair texto: {str(e)}"

# Endpoint para receber a pergunta e retornar a resposta baseada no PDF
@app.route('/ask', methods=['POST'])
def ask():
    data = request.json
    question = data.get('question')
    pdf_url = data.get('pdf_url')

    # Processa o PDF e extrai o texto
    extracted_text = extract_text_from_pdf(pdf_url)
    
    # Aqui você pode melhorar a lógica para responder à pergunta, por enquanto retorna o texto extraído
    response = f"Texto extraído do PDF: {extracted_text}"
    
    return jsonify({"answer": response})

if __name__ == '__main__':
    app.run(debug=True)
